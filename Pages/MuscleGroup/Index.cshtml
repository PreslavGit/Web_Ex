@page
@model webex.Pages_MuscleGroup.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-white">Muscle Groups</h1>

@if (User?.Identity?.IsAuthenticated != null && User.Identity.IsAuthenticated)
{
    <p><a asp-page="Create">Create New</a></p>
}
else
{
    <p><a href="/Auth/Login" onclick="handleRedirect()">Create - Login required</a></p>
}

<form asp-page="./Index" method="get">
    <div class="form-actions text-white">
        Search
        <input type="text" name="SearchString" value="@Model.CurrentFilter" class="inputSearch" />
        <input type="submit" value="Search" class="btn btn-primary" />
        <a asp-page="./Index"> Show all</a>
    </div>
</form>

<table class="table text-neutral">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.MuscleGroup[0].Name)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.LocationSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.MuscleGroup[0].Location)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.MuscleFunctionSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.MuscleGroup[0].MuscleFunction)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.MuscleGroup)
        {
            <tr style="color: @item.Color">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MuscleFunction)
                </td>
                <td>
                    @if (User?.Identity?.IsAuthenticated != null && User.Identity.IsAuthenticated)
                    {
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                    @if (User?.Identity?.IsAuthenticated != null && User.Identity.IsAuthenticated)
                    {
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.MuscleGroup.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.MuscleGroup.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.MuscleGroup.PageIndex - 1)"
    asp-route-currentFilters="@Model.CurrentFilter" class="btn text-primary @prevDisabled">
    Previous</a>

<a asp-page="./Index" asp-route-sortOrder="@Model.CurrentSort" asp-route-pageIndex="@(Model.MuscleGroup.PageIndex + 1)"
    asp-route-currentFilters="@Model.CurrentFilter" class="btn text-primary @nextDisabled">
    Next
</a>

<script>
    function handleRedirect() {
        localStorage.setItem('redirect_back', "/MuscleGroup/Create")
    }
</script>
